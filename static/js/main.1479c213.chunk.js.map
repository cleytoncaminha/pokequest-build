{"version":3,"sources":["services/requestApi.js","contexts/theme-context.js","components/pokeCard/index.js","assets/ashhat.png","assets/rocket.png","components/theme-toggler/index.js","assets/logopoke.png","components/pokebutton/index.js","components/pokeStart/index.js","components/pokeDetails/index.js","components/poke/index.js","routes/index.js","App.js","reportWebVitals.js","index.js"],"names":["getPokemons","number","a","fetch","response","json","pokemons","results","getPokemon","name","getPokeAbility","url","themes","background","card","ThemeContext","createContext","ThemeProvider","props","useState","theme","setTheme","Provider","value","children","CardsList","pokemon","useContext","Div","map","element","index","PokeList","NavLink","to","src","sprites","front_default","alt","Name","types","Type","type","styled","div","Link","span","css","ThemeToggler","H1","DivImg","Img","rocket","onClick","ashhat","img","h1","Button","ButtonDiv","PokeStart","setPokemons","numberPoke","setNumberPoke","input","setInput","useEffect","fetchData","data","names","pokemonName","image","Promise","all","MainStyle","Logo","logopoke","Label","htmlFor","Input","id","onChange","event","target","undefined","length","createGlobalStyle","label","PokeDetails","ability","setAbility","abilitiesUrl","abilities","Card","List","moves","Itens","move","effect_entries","language","effect","ul","li","Poke","setPokemon","useParams","console","log","GlobalStyle","AppRoutes","exact","path","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1479c213.chunk.js","sourcesContent":["async function getPokemons(number) {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/?limit=${number}&offset=0`)\r\n    const pokemons = await response.json()\r\n    const results = pokemons.results\r\n    return results\r\n}\r\n\r\nasync function getPokemon(name) {\r\n    const response = await fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n    const pokemons = await response.json()\r\n    return pokemons\r\n}\r\n\r\nasync function getPokeAbility(url) {\r\n    const response = await fetch(url)\r\n    const pokemons = await response.json()\r\n    return pokemons\r\n}\r\n\r\n\r\nexport { getPokemons, getPokemon, getPokeAbility }","import { createContext, useState } from \"react\";\r\n\r\nexport const themes = {\r\n    light: {\r\n        background: '#1D63AB',\r\n        card: '#7AACBF'\r\n    },\r\n    dark: {\r\n        background: '#2E302C',\r\n        card: '#C83B7C'\r\n    }\r\n}\r\n\r\nexport const ThemeContext = createContext({})\r\n\r\nexport const ThemeProvider = (props) => {\r\n    const [ theme, setTheme ] = useState(themes.light)\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ theme, setTheme }}>\r\n            {props.children}\r\n        </ThemeContext.Provider>\r\n    )\r\n}","import { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport styled, { css } from 'styled-components'\r\nimport { ThemeContext } from \"../../contexts/theme-context\"\r\n\r\nconst CardsList = (props) => {\r\n    const pokemons = props.pokemon\r\n    const { theme } = useContext(ThemeContext)\r\n\r\n    return (\r\n        <Div >\r\n            {pokemons.map((element, index) => {\r\n                return (<PokeList key={index} theme={theme}>\r\n                    <NavLink to={`/poke/${element.name}`}>\r\n                        <div>\r\n                            <img src={element.sprites.front_default} alt={element.name}></img>\r\n                            <Name>{element.name}</Name>\r\n                            <div>{element.types.map((types, index) => {\r\n                                return (\r\n                                    <Type key={index} type={types.type.name}> {types.type.name}</Type>\r\n                                )\r\n                            })}</div>\r\n                        </div>\r\n                    </NavLink>\r\n                </PokeList>)\r\n            })}\r\n        </Div>\r\n    )\r\n}\r\n\r\nconst Div = styled.div`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\npadding: 20px;\r\njustify-content:center;\r\n@media (max-width: 768px){\r\n    display: block;\r\n}\r\n`\r\n\r\nconst PokeList = styled.div`\r\nbackground-color: ${props => props.theme.card};\r\nmargin:10px;\r\nheight: 20rem;\r\ntext-align:center;\r\nwidth:25%;\r\nalign-itens:center;\r\npadding-top: 20px;\r\npadding-bottom: 20px;\r\nborder-radius:20px;\r\nborder: 3px solid #7E281B;\r\nbox-shadow: 1px 5px 6px 1px rgba(0, 0, 0, 0.2);\r\nfont-size: 20px;\r\ntransition: all 300ms ease-in-out;\r\nbox-sizing: border-box;\r\n&:hover{\r\n    cursor: pointer;\r\n    border: 10px solid #7E281B;\r\n  \r\n  };\r\n@media (max-width: 768px){\r\n    width: 50%;\r\n    margin: 3% auto\r\n}\r\n`\r\n\r\nconst Name = styled.div`\r\nfont-weight: 500;\r\n\r\n`\r\n\r\nconst NavLink = styled(Link)`\r\n  padding: 20px;\r\n  color: black;\r\n  text-decoration: none;\r\n`\r\n\r\nconst Type = styled.span`\r\nborder-radius: 5px;\r\nfont-weight: 700;\r\n${props => props.type === \"fire\" && css`\r\ncolor:#B42126;\r\n`}\r\n${props => props.type === \"bug\" && css`\r\ncolor: #1C4B27\r\n`}\r\n${props => props.type === \"normal\" && css`\r\ncolor: #76525C\r\n`}\r\n${props => props.type === \"fighting\" && css`\r\ncolor: #EF613B\r\n`}\r\n${props => props.type === \"flying\" && css`\r\ncolor: #48667E\r\n`}\r\n${props => props.type === \"poison\" && css`\r\ncolor: #602b8d\r\n`}\r\n${props => props.type === \"ground\" && css`\r\ncolor: #a66f2c\r\n`}\r\n${props => props.type === \"rock\" && css`\r\ncolor: #49180a\r\n`}\r\n${props => props.type === \"ghost\" && css`\r\ncolor: #33326c\r\n`}\r\n${props => props.type === \"steel\" && css`\r\ncolor: #5d766e\r\n`}\r\n${props => props.type === \"water\" && css`\r\ncolor: #1552e1\r\n`}\r\n${props => props.type === \"grass\" && css`\r\ncolor: #157a3e\r\n`}\r\n${props => props.type === \"electric\" && css`\r\ncolor: #E2E429\r\n`}\r\n${props => props.type === \"psychic\" && css`\r\ncolor: #a22a6a\r\n`}\r\n${props => props.type === \"ice\" && css`\r\ncolor: #86D1F4\r\n`}\r\n${props => props.type === \"dragon\" && css`\r\ncolor: #438998\r\n`}\r\n${props => props.type === \"dark\" && css`\r\ncolor: #05060A\r\n`}\r\n${props => props.type === \"fairy\" && css`\r\ncolor: #EC1469\r\n`}`\r\n\r\nexport { CardsList }","export default __webpack_public_path__ + \"static/media/ashhat.af6b9041.png\";","export default __webpack_public_path__ + \"static/media/rocket.2a5563af.png\";","import React, { useContext } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { ThemeContext, themes } from \"../../contexts/theme-context\"\r\nimport ashhat from \"../../assets/ashhat.png\"\r\nimport rocket from \"../../assets/rocket.png\"\r\n\r\nexport const ThemeToggler = () => {\r\n    const { theme, setTheme } = useContext(ThemeContext)\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Div >\r\n                <H1>Themes:</H1>\r\n                <DivImg>\r\n                    <Img src={rocket} alt=\"dark theme\" onClick={() => setTheme(themes.dark)}></Img>\r\n                </DivImg>\r\n                <DivImg>\r\n                    <Img src={ashhat} alt=\"light theme\" onClick={() => setTheme(themes.light)}></Img>\r\n                </DivImg>\r\n            </Div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Div = styled.div`\r\ndisplay: flex;\r\nflex-direction: wrap;\r\nalign-items: center;\r\njustify-content: center;\r\n@media (max-width: 768px){\r\n    display: block;\r\n    text-align: center;\r\n  }\r\n`\r\nconst Img = styled.img`\r\nwidth: 100%; \r\nbox-sizing:border-box;\r\n&:hover{\r\n    border: 1px solid red;\r\n    border-radius: 5px;\r\n    };\r\n`\r\nconst DivImg = styled.div`\r\nwidth:3%;\r\ncursor:pointer;\r\nmargin-left: 2px;\r\n@media (max-width: 768px){\r\n    width:10%;\r\n    margin: auto;\r\n  }\r\n`\r\nconst H1 = styled.h1`\r\ncolor: #FFCB05;\r\npadding: 1%;\r\n@media (max-width: 768px){\r\n    font-size: 20px;\r\n  }\r\n`","export default __webpack_public_path__ + \"static/media/logopoke.935a673b.png\";","import styled from 'styled-components'\r\n\r\nexport const Button = (props) => {\r\n\r\n\r\n\r\n    return (\r\n      <div>\r\n        <ButtonDiv {...props} ></ButtonDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ButtonDiv = styled.div`\r\nalign-text: center;\r\nbackground-color: #d2ded4;\r\nwidth: 10%;\r\nfont-size: 20px;\r\nmargin:auto;\r\npadding: 10px;\r\ntext-align: center;\r\ncolor: #7E281B;\r\nfont-weight : 700;\r\nborder: 3px solid #7AACBF;\r\nborder-radius: 50px;\r\ntransition: all 500ms ease;\r\nmargin-bottom: 1%;\r\nmargin-top: 1%;\r\n&:hover{\r\n  cursor: pointer;\r\n  color: #d2ded4;\r\n  background-color: #73281b;\r\n}\r\n&:active{\r\n  color: #d2ded4;\r\n  background-color: #73281b;\r\n}\r\n@media (max-width: 768px){\r\n  width: 45%;\r\n}\r\n`","import { useContext, useEffect, useState } from \"react\";\r\nimport { getPokemon, getPokemons } from \"../../services/requestApi\"\r\nimport { CardsList } from \"../pokeCard\"\r\nimport styled, { createGlobalStyle } from 'styled-components'\r\nimport { ThemeToggler } from \"../theme-toggler\";\r\nimport logopoke from \"../../assets/logopoke.png\"\r\nimport { ThemeContext } from \"../../contexts/theme-context\";\r\nimport { Button } from \"../pokebutton\";\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction PokeStart() {\r\n\r\n  const [pokemons, setPokemons] = useState([])\r\n  const [numberPoke, setNumberPoke] = useState(10)\r\n\r\n  const { theme } = useContext(ThemeContext)\r\n\r\n  const [input, setInput] = useState('pikachu')\r\n\r\n  const adcNumberPoke = () => {\r\n    setNumberPoke(numberPoke + 10)\r\n  }\r\n\r\n  const inputChange = (event) => {\r\n    setInput(\r\n      [event.target.value]\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n\r\n      const data = await getPokemons(numberPoke)\r\n      const names = data.map((element) => {\r\n        return (\r\n          element.name\r\n        )\r\n      })\r\n      const pokemonName = names.map(async (element) => {\r\n        const image = await getPokemon(element)\r\n        return (image)\r\n      })\r\n      const results = await Promise.all(pokemonName)\r\n\r\n      setPokemons(results)\r\n\r\n    }\r\n    fetchData()\r\n  }, [numberPoke])\r\n\r\n  return (\r\n    <div>\r\n      <header>\r\n        <MainStyle theme={theme} />\r\n        <Logo><Img src={logopoke} alt=\"logo POKEMON\"></Img></Logo>\r\n        <ThemeToggler />\r\n      </header>\r\n      <main>\r\n        <Div>\r\n          <form>\r\n            <Label htmlFor=\"search\">Search your pokemon</Label>\r\n            <Input type=\"text\" id=\"search\" name=\"search\" onChange={inputChange} value={input} onClick={() => setInput('')}></Input>\r\n            <Button> <NavLink to={`/poke/${input}`}>Search</NavLink></Button>\r\n          </form>\r\n        </Div>\r\n        <div>{pokemons.length !== undefined ? <CardsList pokemon={pokemons} /> : \"No pokemon found\"}</div>\r\n      </main>\r\n      <footer>\r\n        <Button onClick={adcNumberPoke}>Show More</Button>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst MainStyle = createGlobalStyle`\r\n  body{\r\n   background-color: ${props => props.theme.background};\r\n  }\r\n`\r\n\r\nconst Logo = styled.div`\r\ntext-align: center;\r\nmargin: 5px;\r\n\r\n`\r\nconst Img = styled.img`\r\nwidth: 45%;\r\n@media (max-width: 768px){\r\n  width: 100%;\r\n}\r\n`\r\nconst NavLink = styled(Link)`\r\n  padding: 20px;\r\n  color: black;\r\n  text-decoration: none;\r\n`\r\nconst Div = styled.div`\r\ntext-align: center;\r\ncolor: yellow;\r\n`\r\nconst Label = styled.label`\r\ndisplay: block;\r\npadding: 3px;\r\nfont-weight: 500;\r\nfont-size: 20px\r\n`\r\nconst Input = styled.input`\r\nmargin: 10px;\r\nheight: 30px;\r\nfont-size: 25px\r\n`\r\n\r\nexport { PokeStart }\r\n","import { useState, useEffect, useContext } from \"react\"\r\nimport { getPokeAbility } from \"../../services/requestApi\"\r\nimport styled, { css } from 'styled-components'\r\nimport { ThemeContext } from \"../../contexts/theme-context\"\r\nimport { Button } from \"../pokebutton\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nconst PokeDetails = (props) => {\r\n    const [ability, setAbility] = useState()\r\n    const { theme } = useContext(ThemeContext)\r\n\r\n    const pokemon = props.pokemon\r\n    const abilities = pokemon.abilities\r\n    const abilitiesUrl = abilities.map((element) => {\r\n        return element.ability.url\r\n    })\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = abilitiesUrl.map(async (element) => {\r\n                return (\r\n                    await getPokeAbility(element)\r\n                )\r\n            })\r\n            const results = await Promise.all(data)\r\n            setAbility(results)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Card theme={theme}>\r\n                <Img src={pokemon.sprites.front_default} alt={pokemon.name}></Img>\r\n                <Div theme={theme}>\r\n                    <Name>{pokemon.name}</Name>\r\n\r\n                    <p>{pokemon.types.map((types, index) => {\r\n                        return (\r\n                            <Type key={index} type={types.type.name}> {types.type.name}</Type>\r\n                        )\r\n                    })}</p>\r\n                    <h1>Moves List</h1>\r\n                    <List>{pokemon.moves.map((moves, index) => {\r\n                        return (\r\n                            <Itens key={index}>{moves.move.name}</Itens>\r\n                        )\r\n                    })}</List>\r\n                    <div><h1>Abilities</h1>\r\n                        {ability !== undefined ? ability.map((ability, index) => {\r\n                            return (<div key={index}>\r\n                                <h4>{ability.name}</h4>\r\n                                <p>{ability.effect_entries[1].language.name === \"en\" ? ability.effect_entries[1].effect : ability.effect_entries[0].effect}</p>\r\n                            </div>\r\n                            )\r\n                        }) : \"Loading Abilities\"}</div>\r\n                        <Button><NavLink to={`/`}>Back</NavLink></Button>\r\n                </Div>\r\n\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Card = styled.div`\r\nbackground-color: ${props => props.theme.card};\r\ntext-align:center;\r\nwidth:90%;\r\nborder-radius:20px;\r\nborder: 3px solid #7E281B;\r\nbox-shadow: 1px 5px 6px 1px rgba(0, 0, 0, 0.2);\r\nmargin: auto;\r\ndisplay: flex;\r\nalign-items:center;\r\njustify-content: space-around;\r\npadding: 5px;\r\n@media (max-width: 768px){\r\n    display:block\r\n  }\r\n`\r\n\r\nconst List = styled.ul`\r\ndisplay: flex;\r\nflex-wrap: wrap;\r\nlist-style:none;\r\njustify-content: center;\r\n`\r\nconst Itens = styled.li`\r\nmargin: 5px 10px ;\r\ntext-transform: capitalize;\r\n`\r\n\r\nconst Img = styled.img`\r\nwidth: 30%;\r\n@media (max-width: 768px){\r\n    width: 50%\r\n  }\r\n`\r\n\r\nconst Name = styled.h1`\r\nfont-size: 50px;\r\ntext-transform: uppercase;\r\nfont-weight:800\r\n`\r\n\r\nconst Div = styled.div`\r\nwidth: 50%;\r\nbackground-color: #D2DED6;\r\nborder-radius: 20px;\r\nborder: 3px solid #7E281B;\r\nbox-shadow: 1px 8px 8px 1px rgba(0, 0, 0, 0.2);\r\npadding:8px;\r\n@media (max-width: 768px){\r\n    width: 98%;\r\n    margin: auto;\r\n    padding: 0px\r\n  }\r\n`\r\nconst NavLink = styled(Link)`\r\n  padding: 20px;\r\n  color: black;\r\n  text-decoration: none;\r\n`\r\nconst Type = styled.span`\r\nborder-radius: 5px;\r\nfont-weight: 700;\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\n${props => props.type === \"fire\" && css`\r\ncolor:#B42126;\r\n`}\r\n${props => props.type === \"bug\" && css`\r\ncolor: #1C4B27\r\n`}\r\n${props => props.type === \"normal\" && css`\r\ncolor: #76525C\r\n`}\r\n${props => props.type === \"fighting\" && css`\r\ncolor: #EF613B\r\n`}\r\n${props => props.type === \"flying\" && css`\r\ncolor: #48667E\r\n`}\r\n${props => props.type === \"poison\" && css`\r\ncolor: #602b8d\r\n`}\r\n${props => props.type === \"ground\" && css`\r\ncolor: #a66f2c\r\n`}\r\n${props => props.type === \"rock\" && css`\r\ncolor: #49180a\r\n`}\r\n${props => props.type === \"ghost\" && css`\r\ncolor: #33326c\r\n`}\r\n${props => props.type === \"steel\" && css`\r\ncolor: #5d766e\r\n`}\r\n${props => props.type === \"water\" && css`\r\ncolor: #1552e1\r\n`}\r\n${props => props.type === \"grass\" && css`\r\ncolor: #157a3e\r\n`}\r\n${props => props.type === \"electric\" && css`\r\ncolor: #E2E429\r\n`}\r\n${props => props.type === \"psychic\" && css`\r\ncolor: #a22a6a\r\n`}\r\n${props => props.type === \"ice\" && css`\r\ncolor: #86D1F4\r\n`}\r\n${props => props.type === \"dragon\" && css`\r\ncolor: #438998\r\n`}\r\n${props => props.type === \"dark\" && css`\r\ncolor: #05060A\r\n`}\r\n${props => props.type === \"fairy\" && css`\r\ncolor: #EC1469\r\n`}`\r\n\r\nexport { PokeDetails }\r\n","import { useState, useEffect, useContext } from \"react\"\r\nimport { getPokemon } from \"../../services/requestApi\"\r\nimport { useParams } from \"react-router\"\r\nimport { PokeDetails } from \"../pokeDetails\"\r\nimport { createGlobalStyle } from \"styled-components\"\r\nimport { ThemeContext } from \"../../contexts/theme-context\"\r\n\r\nconst Poke = () => {\r\n    const [pokemon, setPokemon] = useState()\r\n    const { theme } = useContext(ThemeContext)\r\n\r\n    const { name } = useParams()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            const data = await getPokemon(name)\r\n            setPokemon(data)\r\n        }\r\n        fetchData()\r\n    }, [])\r\n    console.log(pokemon)\r\n    return (\r\n\r\n        <div>\r\n            <GlobalStyle theme={theme} />\r\n            <div>\r\n                {pokemon !== undefined ? <PokeDetails pokemon={pokemon} /> : \"No pokemon found\"}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin:0;\r\n    padding:0;\r\n  \r\n  }\r\n  body{\r\n    background-color: ${props => props.theme.background}\r\n}`\r\n\r\nexport { Poke }\r\n","import { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport { PokeStart } from \"../components/pokeStart\";\r\nimport { Poke } from \"../components/poke\";\r\n\r\n\r\nconst AppRoutes = () => {\r\n    return (\r\n        \r\n            <BrowserRouter>\r\n                <Routes>\r\n                    <Route exact path='/' element={<PokeStart />}></Route>\r\n                    <Route exact path='/poke/:name' element={<Poke />}></Route>\r\n                </Routes>\r\n            </BrowserRouter>\r\n       \r\n    )\r\n}\r\n\r\nexport { AppRoutes }","import { AppRoutes } from './routes'\nimport { createGlobalStyle } from 'styled-components'\nimport { ThemeProvider } from './contexts/theme-context'\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider>\n        <GlobalStyle />\n        <AppRoutes />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin:0;\n    padding:0;\n    }\n\n`\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}